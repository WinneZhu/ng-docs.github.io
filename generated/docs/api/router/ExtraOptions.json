{
  "id": "api/router/ExtraOptions",
  "title": "ExtraOptions",
  "contents": "\n\n<article>\n  <div class=\"github-links\">\n  <a href=\"https://github.com/angular/angular/edit/master/packages/router/src/router_module.ts?message=docs(router)%3A%20describe%20your%20change...#L274-L450\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n  <a href=\"https://github.com/angular/angular/tree/6.1.0/packages/router/src/router_module.ts#L274-L450\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n</div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/router\", \"name\": \"@angular/router\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/router/ExtraOptions\", \"name\": \"ExtraOptions\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/router\">@angular/router</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"extraoptions\">ExtraOptions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/ExtraOptions#extraoptions\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">Represents options to configure the router.</p>\n<p></p>\n  \n  \n  <section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/router/ExtraOptions\" class=\"code-anchor\">ExtraOptions</a> {\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#enableTracing\">enableTracing?: boolean</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#useHash\">useHash?: boolean</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#initialNavigation\">initialNavigation?: InitialNavigation</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#errorHandler\">errorHandler?: ErrorHandler</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#preloadingStrategy\">preloadingStrategy?: any</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#onSameUrlNavigation\">onSameUrlNavigation?: 'reload' | 'ignore'</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#scrollPositionRestoration\">scrollPositionRestoration?: 'disabled' | 'enabled' | 'top'</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#anchorScrolling\">anchorScrolling?: 'disabled' | 'enabled'</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#scrollOffset\">scrollOffset?: [number, number] | (() => [number, number])</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#paramsInheritanceStrategy\">paramsInheritanceStrategy?: 'emptyOnly' | 'always'</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#malformedUriErrorHandler\">malformedUriErrorHandler?: (error: URIError, urlSerializer: UrlSerializer, url: string) => UrlTree</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#urlUpdateStrategy\">urlUpdateStrategy?: 'deferred' | 'eager'</a>\n  <a class=\"code-anchor\" href=\"api/router/ExtraOptions#relativeLinkResolution\">relativeLinkResolution?: 'legacy' | 'corrected'</a>\n}\n</code-example>\n\n  \n  \n\n\n  \n  \n\n</section>\n  \n\n  \n  \n  \n\n<section class=\"instance-properties\">\n  <h2 id=\"properties\">Properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/router/ExtraOptions#properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table property-table\">\n    <thead>\n      <tr>\n        <th>Property</th>\n        <th>Type</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"enableTracing\"></a>enableTracing</td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Makes the router log all its internal events to the console.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"useHash\"></a>useHash</td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Enables the location strategy that uses the URL fragment instead of the history API.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"initialNavigation\"></a>initialNavigation</td>\n        <td><label class=\"property-type-label\"><code>InitialNavigation</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Disables the initial navigation.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"errorHandler\"></a>errorHandler</td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/core/ErrorHandler\" class=\"code-anchor\">ErrorHandler</a></code></label></td>\n        <td>\n          <p translation-origin=\"off\">A custom error handler.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"preloadingStrategy\"></a>preloadingStrategy</td>\n        <td><label class=\"property-type-label\"><code>any</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Configures a preloading strategy. See <code><a href=\"api/router/PreloadAllModules\" class=\"code-anchor\">PreloadAllModules</a></code>.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"onSameUrlNavigation\"></a>onSameUrlNavigation</td>\n        <td><label class=\"property-type-label\"><code>'reload' | 'ignore'</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Define what the router should do if it receives a navigation request to the current URL.\nBy default, the router will ignore this navigation. However, this prevents features such\nas a \"refresh\" button. Use this option to configure the behavior when navigating to the\ncurrent URL. Default is 'ignore'.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"scrollPositionRestoration\"></a>scrollPositionRestoration</td>\n        <td><label class=\"property-type-label\"><code>'disabled' | 'enabled' | 'top'</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Configures if the scroll position needs to be restored when navigating back.</p>\n\n          <ul>\n<li>'disabled'--does nothing (default).</li>\n<li>'top'--set the scroll position to 0,0..</li>\n<li>'enabled'--set the scroll position to the stored position. This option will be the default in\nthe future.</li>\n</ul>\n<p translation-origin=\"off\">When enabled, the router store store scroll positions when navigating forward, and will\nrestore the stored positions whe navigating back (popstate). When navigating forward,\nthe scroll position will be set to [0, 0], or to the anchor if one is provided.</p>\n<p translation-origin=\"off\">You can implement custom scroll restoration behavior as follows.</p>\n<code-example language=\"typescript\">\nclass AppModule {\n constructor(router: <a href=\"api/router/Router\" class=\"code-anchor\">Router</a>, viewportScroller: <a href=\"api/common/ViewportScroller\" class=\"code-anchor\">ViewportScroller</a>, store: Store&#x3C;AppState>) {\n   router.events.pipe(filter(e => e instanceof <a href=\"api/router/Scroll\" class=\"code-anchor\">Scroll</a>), switchMap(e => {\n     return store.pipe(first(), timeout(200), map(() => e));\n   }).subscribe(e => {\n     if (e.position) {\n       viewportScroller.scrollToPosition(e.position);\n     } else if (e.anchor) {\n       viewportScroller.scrollToAnchor(e.anchor);\n     } else {\n       viewportScroller.scrollToPosition([0, 0]);\n     }\n   });\n }\n}\n</code-example>\n<p translation-origin=\"off\">You can also implement component-specific scrolling like this:</p>\n<code-example language=\"typescript\">\nclass ListComponent {\n  list: any[];\n  constructor(router: <a href=\"api/router/Router\" class=\"code-anchor\">Router</a>, viewportScroller: <a href=\"api/common/ViewportScroller\" class=\"code-anchor\">ViewportScroller</a>, fetcher: ListFetcher) {\n    const scrollEvents = router.events.filter(e => e instanceof <a href=\"api/router/Scroll\" class=\"code-anchor\">Scroll</a>);\n    listFetcher.fetch().pipe(withLatestFrom(scrollEvents)).subscribe(([list, e]) => {\n      this.list = list;\n      if (e.position) {\n        viewportScroller.scrollToPosition(e.position);\n      } else {\n        viewportScroller.scrollToPosition([0, 0]);\n      }\n    });\n  }\n}\n</code-example>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"anchorScrolling\"></a>anchorScrolling</td>\n        <td><label class=\"property-type-label\"><code>'disabled' | 'enabled'</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Configures if the router should scroll to the element when the url has a fragment.</p>\n\n          <ul>\n<li>'disabled'--does nothing (default).</li>\n<li>'enabled'--scrolls to the element. This option will be the default in the future.</li>\n</ul>\n<p translation-origin=\"off\">Anchor scrolling does not happen on 'popstate'. Instead, we restore the position\nthat we stored or scroll to the top.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"scrollOffset\"></a>scrollOffset</td>\n        <td><label class=\"property-type-label\"><code>[number, number] | (() => [number, number])</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Configures the scroll offset the router will use when scrolling to an element.</p>\n\n          <p translation-origin=\"off\">When given a tuple with two numbers, the router will always use the numbers.\nWhen given a function, the router will invoke the function every time it restores scroll\nposition.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"paramsInheritanceStrategy\"></a>paramsInheritanceStrategy</td>\n        <td><label class=\"property-type-label\"><code>'emptyOnly' | 'always'</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Defines how the router merges params, data and resolved data from parent to child\nroutes. Available options are:</p>\n\n          <ul>\n<li><code>'emptyOnly'</code>, the default, only inherits parent params for path-less or component-less\nroutes.</li>\n<li><code>'always'</code>, enables unconditional inheritance of parent params.</li>\n</ul>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"malformedUriErrorHandler\"></a>malformedUriErrorHandler</td>\n        <td><label class=\"property-type-label\"><code>(error: URIError, urlSerializer: <a href=\"api/router/UrlSerializer\" class=\"code-anchor\">UrlSerializer</a>, url: string) => <a href=\"api/router/UrlTree\" class=\"code-anchor\">UrlTree</a></code></label></td>\n        <td>\n          <p translation-origin=\"off\">A custom malformed uri error handler function. This handler is invoked when encodedURI contains\ninvalid character sequences. The default implementation is to redirect to the root url dropping\nany path or param info. This function passes three parameters:</p>\n\n          <ul>\n<li><code>'URIError'</code> - Error thrown when parsing a bad URL</li>\n<li><code>'<a href=\"api/router/UrlSerializer\" class=\"code-anchor\">UrlSerializer</a>'</code> - UrlSerializer that’s configured with the router.</li>\n<li><code>'url'</code> -  The malformed URL that caused the URIError</li>\n</ul>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"urlUpdateStrategy\"></a>urlUpdateStrategy</td>\n        <td><label class=\"property-type-label\"><code>'deferred' | 'eager'</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Defines when the router updates the browser URL. The default behavior is to update after\nsuccessful navigation. However, some applications may prefer a mode where the URL gets\nupdated at the beginning of navigation. The most common use case would be updating the\nURL early so if navigation fails, you can show an error message with the URL that failed.\nAvailable options are:</p>\n\n          <ul>\n<li><code>'deferred'</code>, the default, updates the browser URL after navigation has finished.</li>\n<li><code>'eager'</code>, updates browser URL at the beginning of navigation.</li>\n</ul>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"relativeLinkResolution\"></a>relativeLinkResolution</td>\n        <td><label class=\"property-type-label\"><code>'legacy' | 'corrected'</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Enables a bug fix that corrects relative link resolution in components with empty paths.\nExample:</p>\n\n          <code-example>\nconst routes = [\n  {\n    path: '',\n    component: ContainerComponent,\n    children: [\n      { path: '<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>', component: AComponent },\n      { path: 'b', component: BComponent },\n    ]\n  }\n];\n</code-example>\n<p translation-origin=\"off\">From the <code>ContainerComponent</code>, this will not work:</p>\n<p translation-origin=\"off\"><code>&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['./<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>']\">Link to A&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>></code></p>\n<p translation-origin=\"off\">However, this will work:</p>\n<p translation-origin=\"off\"><code>&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> [<a href=\"api/router/RouterLink\" class=\"code-anchor\">routerLink</a>]=\"['../<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>']\">Link to A&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>></code></p>\n<p translation-origin=\"off\">In other words, you're required to use <code>../</code> rather than <code>./</code>. The current default in v6\nis <code>legacy</code>, and this option will be removed in v7 to default to the corrected behavior.</p>\n\n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n  \n\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/router\n - api/router/PreloadAllModules\n - api/router/ROUTER_CONFIGURATION\n - api/router/Router\n - api/router/RouterModule\n - api/router/testing/RouterTestingModule\n - api/router/testing/setupTestingRouter\n - guide/router\n-->\n<!-- links from this doc:\n - /api\n - api/common/ViewportScroller\n - api/core/ErrorHandler\n - api/router\n - api/router/ExtraOptions#anchorScrolling\n - api/router/ExtraOptions#enableTracing\n - api/router/ExtraOptions#errorHandler\n - api/router/ExtraOptions#extraoptions\n - api/router/ExtraOptions#initialNavigation\n - api/router/ExtraOptions#malformedUriErrorHandler\n - api/router/ExtraOptions#onSameUrlNavigation\n - api/router/ExtraOptions#paramsInheritanceStrategy\n - api/router/ExtraOptions#preloadingStrategy\n - api/router/ExtraOptions#properties\n - api/router/ExtraOptions#relativeLinkResolution\n - api/router/ExtraOptions#scrollOffset\n - api/router/ExtraOptions#scrollPositionRestoration\n - api/router/ExtraOptions#urlUpdateStrategy\n - api/router/ExtraOptions#useHash\n - api/router/PreloadAllModules\n - api/router/Router\n - api/router/RouterLink\n - api/router/RouterLinkWithHref\n - api/router/Scroll\n - api/router/UrlSerializer\n - api/router/UrlTree\n - https://github.com/angular/angular/edit/master/packages/router/src/router_module.ts?message=docs(router)%3A%20describe%20your%20change...#L274-L450\n - https://github.com/angular/angular/tree/6.1.0/packages/router/src/router_module.ts#L274-L450\n-->"
}